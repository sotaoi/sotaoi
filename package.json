{
  "name": "@sotaoi/sotaoi",
  "private": true,
  "scripts": {
    "set:ecosystem": "node ./scripts/set-ecosystem",
    "set:super-api": "node ./scripts/set-super-api",
    "set:api": "node ./scripts/set-api",
    "set:client": "node ./scripts/set-client",
    "set:web": "node ./scripts/set-web",
    "set:mobile": "node ./scripts/set-mobile",
    "set:desktop": "node ./scripts/set-desktop",
    "bootstrap": "node ./scripts/bootstrap",
    "reset": "npm run clean:project && npm run bootstrap",
    "adb:devices": "node ./scripts/adb-devices",
    "install:certs": "node ./scripts/install/install-certs",
    "install:rnsdk": "node ./scripts/install/install-rnsdk",
    "install:pull": "node ./scripts/install/install-pull",
    "db:migrate": "node ./scripts/db-migrate",
    "db:rollback": "node ./scripts/db-rollback",
    "db:migrate:down": "node ./scripts/db-migrate-down",
    "db:seed": "node ./scripts/db-seed",
    "start:servers": "concurrently --kill-others \"npm run detach:proxy\" \"npm run start:api\" \"npm run start:auth\" \"npm run start:streaming\"",
    "start:servers:prod": "npm run start:api:prod && npm run start:auth:prod && npm run start:proxy:prod && npm run start:streaming:prod",
    "start:api": "node ./scripts/start-api",
    "start:api:prod": "node ./scripts/start-api-prod",
    "restart:api:prod": "node ./scripts/restart-api-prod",
    "stop:api:prod": "node ./scripts/stop-api-prod",
    "start:auth": "node ./scripts/start-auth",
    "start:auth:prod": "node ./scripts/start-auth-prod",
    "restart:auth:prod": "node ./scripts/restart-auth-prod",
    "stop:auth:prod": "node ./scripts/stop-auth-prod",
    "start:proxy": "node ./scripts/start-proxy",
    "detach:proxy": "node ./scripts/detach-proxy",
    "restart:proxy": "node ./scripts/restart-proxy",
    "stop:proxy": "node ./scripts/stop-proxy",
    "start:proxy:prod": "node ./scripts/start-proxy-prod",
    "restart:proxy:prod": "node ./scripts/restart-proxy-prod",
    "stop:proxy:prod": "node ./scripts/stop-proxy-prod",
    "start:streaming": "node ./scripts/start-streaming",
    "start:streaming:prod": "node ./scripts/start-streaming-prod",
    "restart:streaming:prod": "node ./scripts/restart-streaming-prod",
    "stop:streaming:prod": "node ./scripts/stop-streaming-prod",
    "start:php": "node ./scripts/start-php",
    "start:web": "node ./scripts/start-web",
    "start:web:prod": "node ./scripts/start-web-prod",
    "start:rn": "node ./scripts/start-rn",
    "start:ios": "node ./scripts/start-ios",
    "start:android": "node ./scripts/start-android",
    "build:web": "node ./scripts/build-web",
    "clean:project": "node ./scripts/clean-project",
    "clean:web": "node ./scripts/clean-web",
    "clean:mobile": "node ./scripts/clean-mobile",
    "clean:ios": "node ./scripts/clean-ios",
    "clean:android": "node ./scripts/clean-android",
    "push:all": "node ./scripts/push-all",
    "pull:all": "node ./scripts/pull-all",
    "status:all": "node ./scripts/status-all",
    "shell:clear-mc": "node ./scripts/shell-clear-mc",
    "shell:rnr": "npm run shell:clear-mc && npm run start:rn",
    "app:up": "node ./scripts/app-up",
    "app:down": "node ./scripts/app-down",
    "force:remove": "node ./scripts/force-remove",
    "postinstall": "node ./scripts/hook/hook-postinstall.js",
    "pkill": "pkill -f 'npm run start'",
    "ssl:greenlock": "node ./scripts/ssl-greenlock",
    "ssl:greenlock:prod": "node ./scripts/ssl-greenlock-prod",
    "ssl:snakeoil": "node ./scripts/ssl-snakeoil"
  },
  "dependencies": {
    "@types/node": "^14",
    "command-exists": "^1.2.9",
    "concurrently": "^6.2.0"
  }
}
